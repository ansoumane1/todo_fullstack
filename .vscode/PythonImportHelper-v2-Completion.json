[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "Book",
        "importPath": "book_app.models",
        "description": "book_app.models",
        "isExtraImport": true,
        "detail": "book_app.models",
        "documentation": {}
    },
    {
        "label": "Book",
        "importPath": "book_app.models",
        "description": "book_app.models",
        "isExtraImport": true,
        "detail": "book_app.models",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "BookSerializer",
        "importPath": "book_app.api.serializers",
        "description": "book_app.api.serializers",
        "isExtraImport": true,
        "detail": "book_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.src.bookApi.asgi",
        "description": "backend.src.bookApi.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend.src.bookApi.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-ns-xhqw1cew)48b%e&leb*fj5q=9xeids8p14mi!vl8p+csd5n'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['localhost', '10.0.2.2']\n# Application definition\nINSTALLED_APPS = [",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-ns-xhqw1cew)48b%e&leb*fj5q=9xeids8p14mi!vl8p+csd5n'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['localhost', '10.0.2.2']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['localhost', '10.0.2.2']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['localhost', '10.0.2.2']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    \"corsheaders\",\n    'book_app',",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    \"corsheaders.middleware.CorsMiddleware\",\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = True\nROOT_URLCONF = 'bookApi.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "ROOT_URLCONF = 'bookApi.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "WSGI_APPLICATION = 'bookApi.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.src.bookApi.settings",
        "description": "backend.src.bookApi.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.src.bookApi.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.src.bookApi.urls",
        "description": "backend.src.bookApi.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('books/', include('book_app.api.urls')),\n]",
        "detail": "backend.src.bookApi.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.src.bookApi.wsgi",
        "description": "backend.src.bookApi.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.src.bookApi.wsgi",
        "documentation": {}
    },
    {
        "label": "BookSerializer",
        "kind": 6,
        "importPath": "backend.src.book_app.api.serializers",
        "description": "backend.src.book_app.api.serializers",
        "peekOfCode": "class BookSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Book\n        fields = '__all__'\n        read_only_fields = ('id', 'created_at', 'updated_at')\n    def create(self, validated_data):\n        return Book.objects.create(**validated_data)\n    def update(self, instance, validated_data):\n        instance.title = validated_data.get('title', instance.title)\n        instance.author = validated_data.get('author', instance.author)",
        "detail": "backend.src.book_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.src.book_app.api.urls",
        "description": "backend.src.book_app.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('list/' , getBookList, name='book-list'),\n    path('<str:pk>/', getBookDetail, name='book-detail'),\n]",
        "detail": "backend.src.book_app.api.urls",
        "documentation": {}
    },
    {
        "label": "getBookList",
        "kind": 2,
        "importPath": "backend.src.book_app.api.views",
        "description": "backend.src.book_app.api.views",
        "peekOfCode": "def getBookList(request):\n     if request.method == 'GET':\n        books = Book.objects.all()\n        serializer = BookSerializer(books, many=True)\n        return Response(serializer.data)\n     if request.method == 'POST':\n         serializer = BookSerializer(data=request.data)\n         if serializer.is_valid():\n             serializer.save()\n             return Response(serializer.data, status=status.HTTP_201_CREATED)",
        "detail": "backend.src.book_app.api.views",
        "documentation": {}
    },
    {
        "label": "getBookDetail",
        "kind": 2,
        "importPath": "backend.src.book_app.api.views",
        "description": "backend.src.book_app.api.views",
        "peekOfCode": "def getBookDetail(request, pk):\n    try:\n        book = Book.objects.get(pk=pk)\n    except Book.DoesNotExist:\n        return Response(status=status.HTTP_404_NOT_FOUND)\n    if request.method == 'GET':\n        serializer = BookSerializer(book)\n        return Response(serializer.data)\n    if request.method == 'PUT':\n        serializer = BookSerializer(book, data=request.data)",
        "detail": "backend.src.book_app.api.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.src.book_app.migrations.0001_initial",
        "description": "backend.src.book_app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Book',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),\n                ('title', models.CharField(max_length=200, verbose_name='Titre')),",
        "detail": "backend.src.book_app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.src.book_app.migrations.0002_book_price",
        "description": "backend.src.book_app.migrations.0002_book_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('book_app', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='book',\n            name='price',\n            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Prix'),\n        ),",
        "detail": "backend.src.book_app.migrations.0002_book_price",
        "documentation": {}
    },
    {
        "label": "BookAppConfig",
        "kind": 6,
        "importPath": "backend.src.book_app.apps",
        "description": "backend.src.book_app.apps",
        "peekOfCode": "class BookAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'book_app'",
        "detail": "backend.src.book_app.apps",
        "documentation": {}
    },
    {
        "label": "Book",
        "kind": 6,
        "importPath": "backend.src.book_app.models",
        "description": "backend.src.book_app.models",
        "peekOfCode": "class Book(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    title = models.CharField(max_length=200, verbose_name=\"Titre\")\n    author = models.CharField(max_length=200, verbose_name=\"Auteur\")\n    isbn = models.CharField(max_length=17, blank=True, null=True, verbose_name=\"ISBN\")\n    price = models.DecimalField(max_digits=10, decimal_places=2, verbose_name=\"Prix\", default=0.00)\n    description = models.TextField(blank=True, verbose_name=\"Description\")\n    cover_image = models.URLField(blank=True, verbose_name=\"Image de couverture\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "backend.src.book_app.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.src.manage",
        "description": "backend.src.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bookApi.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend.src.manage",
        "documentation": {}
    }
]